/*
 * ut_lm73_test.c
 *
 *  Created on: 2020. dec. 30.
 *      Author: jszeman
 */

#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include "unity_fixture.h"
#include "crf.h"
#include "cbits.h"
#include "ut_i2c_driver_mock.h"
#include "i2c_master.h"
#include "lm73.h"
#include "cevent.h"
#include "sys_if.h"

TEST_GROUP(lm73);

ut_i2c_driver_mock_tst  drv_mock_st;
i2c_driver_if_tst*      drv_pst = (i2c_driver_if_tst *)&drv_mock_st;

const cevent_tst*		i2c_master_events_apst[8];
i2c_master_tst			i2c_master_st;

const cevent_tst*		lm73_events_apst[8];
lm73_tst				lm73_st;


lm73_tst *self = 		&lm73_st; // This is necessary for macros like LM73_READ_PERIOD to work here

chsm_tst*				hsm_apst[] = {
	(chsm_tst*)(&i2c_master_st),
	(chsm_tst*)(&lm73_st),
	NULL};

uint8_t 				pool_buff_au8[1024];
cpool_tst				pool_ast[1];

crf_tst					crf;

const cevent_tst*       events_apst[4];
cqueue_tst              q_st;

const cevent_tst		tick_10ms_st = {.sig = SIG_SYS_TICK_10ms};

static void tick_ms(uint32_t tick_cnt_u32)
{
	while(tick_cnt_u32--)
	{
		drv_mock_st.tick(&drv_mock_st);

		CRF_POST(&tick_10ms_st, &lm73_st);

		while(CRF_STEP())
		{
			printf("|");
		}
	}
}

void lm73_send(chsm_tst *self, const cevent_tst *e_pst)
{
    //printf("\n%s\n", __FUNCTION__);
	switch(e_pst->sig)
	{
		case SIG_LM73_TEMP:
		case SIG_LM73_ONLINE:
		case SIG_LM73_OFFLINE:
			CRF_POST(e_pst, &q_st);
			break;

		default:
			CRF_POST(e_pst, &i2c_master_st);
	}
}


TEST_SETUP(lm73)
{
    memset(events_apst, 0, sizeof events_apst);
    memset(&q_st, 0, sizeof q_st);
    memset(&drv_mock_st, 0, sizeof drv_mock_st);
    memset(&i2c_master_st, 0, sizeof i2c_master_st);
    memset(&crf, 0, sizeof crf);
    memset(&i2c_master_events_apst, 0, sizeof i2c_master_events_apst);
    memset(&pool_buff_au8, 0, sizeof pool_buff_au8);
    memset(&pool_ast, 0, sizeof pool_ast);
    memset(&lm73_st, 0, sizeof lm73_st);

	cpool_init(pool_ast+0, pool_buff_au8, 24, 16);

    cqueue_init(&q_st, events_apst, 4);

    ut_i2c_driver_mock_init(&drv_mock_st);

	i2c_master_st.config_st.driver_pst = drv_pst;
	chsm_ctor(&i2c_master_st.super, i2c_master_top, i2c_master_events_apst, 4, 4);
	chsm_ctor(&lm73_st.super, lm73_top, lm73_events_apst, 8, 0);
	
	lm73_st.config_st = (lm73_cfg_tst){
		.address_u8 = 			0x12,
		.id_u16 = 				0xabcd,
		.period_ms_u16 = 		LM73_READ_PERIOD_VALUE,
		.max_error_cnt_u16 = 	LM73_MAX_ERROR_COUNT_VALUE
		};

	CRF_SEND_FUNC(&lm73_st) = lm73_send;

	crf_init(&crf, hsm_apst, pool_ast, 1);
	chsm_init((chsm_tst *)&i2c_master_st);
	chsm_init((chsm_tst *)&lm73_st);
}

TEST_TEAR_DOWN(lm73)
{
}

TEST(lm73, init)
{
}

TEST_GROUP_RUNNER(lm73)
{
	RUN_TEST_CASE(lm73, init);
}
