if(NOT TARGET crf AND DEFINED CHSM_INCLUDED)
    message(STATUS "crf not exists.")
    unset(CHSM_INCLUDED CACHE)
endif()

if(NOT DEFINED CHSM_INCLUDED)

cmake_minimum_required(VERSION 3.19)

project(chsm 
VERSION 1.0.0
LANGUAGES C CXX ASM
DESCRIPTION "CHSM - Hierarchical State Machine (HSM) Framework for C The project consists of two main parts: an editor (CHSM) to draw state machines and a C library (CRF) that is able to drive the C code generated by the editor.")

########################  External .cmake files includes  ############################ 

if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})
    message(STATUS "This CHSM is the top-level project.")
        
    list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake_utils")
    include(cmake_utils)

    set(DEBUG ON)
    option(BUILD_TESTS ON)
else()
    message(STATUS "This CHSM is NOT the top-level project.")
    if(NOT DEFINED CMAKE_UTILS_INCLUDED)
        list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake_utils")
        include(cmake_utils)
    
        set(DEBUG ON)
        option(BUILD_TESTS ON)
    endif()
endif()

########################  Global settings  ############################ 
option(CHSM_BUILD_TESTS ON)
set(OUTSIDE_PYTHON_PATH ${$ENV{PYTHON_PATH}})

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR})  

# Generate compile_command.json to make it easier to work with clang based tools
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

message(STATUS "
----------------------> Chsm <-----------------------------------
")

if(CHSM_BUILD_TESTS)
    message(STATUS "----------> Enabled the tests! <-------------------")
    enable_testing()
    set(UNITY_EXTENSION_FIXTURE ON CACHE INTERNAL "Set UNITY_EXTENSION_FIXTURE CACHE INTERNAL.")
    set(UNITY_EXTENSION_MEMORY ON CACHE INTERNAL "Set UNITY_EXTENSION_MEMORY CACHE INTERNAL.")
    # set(UNITY_SUPPORT_64 ON CACHE INTERNAL "Set UNITY_SUPPORT_64 CACHE INTERNAL.")
    
    add_subdirectory(unity)
endif()

add_subdirectory(modules)
add_subdirectory(c_rf)
    
set(CHSM_INCLUDED TRUE CACHE INTERNAL "Set CHSM_INCLUDED flag which is a sign that ones is already included.")

endif()

